name: PR: Check closing keywords

on:
  pull_request_target:
    types: [opened, edited, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Check for closing keywords
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            const title = pr.title || '';
            const text = `${title}\n\n${body}`;

            const regex = /(close[sd]?|fix(e[sd])?|resolve[sd]?)\s*[: ]\s*(?:[\w.-]+\/[\w.-]+)?#\d+/i;
            const hasKeyword = regex.test(text);

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue_number = pr.number;

            const labelName = 'needs-linked-issue';
            const marker = '<!-- closing-keywords-check -->';

            if (hasKeyword) {
              try {
                await github.rest.issues.removeLabel({ owner, repo, issue_number, name: labelName });
              } catch (e) {}

              const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number, per_page: 100 });
              const warnings = comments.filter(c => c.body && c.body.includes(marker));
              for (const c of warnings) {
                try { await github.rest.issues.deleteComment({ owner, repo, comment_id: c.id }); } catch (e) {}
              }
              return;
            }

            async function ensureLabel() {
              try {
                await github.rest.issues.getLabel({ owner, repo, name: labelName });
              } catch {
                await github.rest.issues.createLabel({
                  owner, repo, name: labelName,
                  color: 'FBCA04',
                  description: 'PR missing closing keywords to auto-close issues'
                });
              }
            }
            await ensureLabel();

            try {
              await github.rest.issues.addLabels({ owner, repo, issue_number, labels: [labelName] });
            } catch (e) {}

            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number, per_page: 100 });
            const existing = comments.find(c => c.body && c.body.includes(marker));
            const message = `${marker}\nPlease add a closing keyword so the related issue closes automatically when this PR merges, for example:\n\n- Closes #123\n- Fixes #456, resolves #789\n\nIf only partially addressing, use non-closing phrasing (e.g., \"Refs #123\").`;
            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body: message });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body: message });
            }
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Start server
        run: npm start
      - name: Check server
        run: curl -f http://localhost:3000/ || exit 1
      - name: Helmet security
        run: |
          const helmet = require('helmet');
          app.set('trust proxy', 1);
          app.use(helmet());